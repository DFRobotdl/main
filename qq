#include <WiFi.h>
#include <PubSubClient.h>
#include <ArduinoJson.h>
#include "DFRobot_Aliyun.h"

#define BEDROOD_LIGHT  21

/*配置WIFI名和密码*/
const char * WIFI_SSID     = "HF8102_3460";
const char * WIFI_PASSWORD = "";

/*配置设备证书信息*/
String ProductKey = "a1TgdgfZSQJ";
String ClientId = "12345";/*自定义ID*/
String DeviceName = "ESP32";
String DeviceSecret = "D1Muj8oPLhoiqA3VXurY3XYHgsRvLUUB";

/*配置域名和端口号*/
String ALIYUN_SERVER = "iot-as-mqtt.cn-shanghai.aliyuncs.com";
uint16_t PORT = 1883;

/*需要操作的产品标识符*/
String Identifier = "DFRobot";

/*需要上报和订阅的两个TOPIC*/
const char * subTopic = "/sys/a1TgdgfZSQJ/ESP32/thing/service/property/set";//****set
const char * pubTopic = "/sys/a1TgdgfZSQJ/ESP32/thing/event/property/post";//******post

DFRobot_Aliyun myAliyun;
WiFiClient espClient;
PubSubClient client(espClient);


#include <GxEPD.h>
#include "SD.h"
#include "SPI.h"

// #include <GxGDE0213B72B/GxGDE0213B72B.h>       // 2.13" b/w
//#include <GxGDEH0213B73/GxGDEH0213B73.h>  // 2.13" b/w newer panel
//#include <GxGDE0213B72/GxGDE0213B72.h>
#include <GxGDEH0213B72/GxGDEH0213B72.h>

#include <Fonts/FreeMonoBold9pt7b.h>
#include <Fonts/FreeMonoBold12pt7b.h>
#include <Fonts/FreeMonoBold18pt7b.h>
#include <Fonts/FreeMonoBold24pt7b.h>


#include <GxIO/GxIO_SPI/GxIO_SPI.h>
#include <GxIO/GxIO.h>

#define SPI_MOSI 23
#define SPI_MISO -1
#define SPI_CLK 18

#define ELINK_SS 5
#define ELINK_BUSY 4
#define ELINK_RESET 16
#define ELINK_DC 17

#define SDCARD_SS 13
#define SDCARD_CLK 14
#define SDCARD_MOSI 15
#define SDCARD_MISO 2

#define BUTTON_PIN 39


GxIO_Class io(SPI, /*CS=5*/ ELINK_SS, /*DC=*/ ELINK_DC, /*RST=*/ ELINK_RESET);
GxEPD_Class display(io, /*RST=*/ ELINK_RESET, /*BUSY=*/ ELINK_BUSY);

SPIClass sdSPI(VSPI);

bool sdOK = false;


void connectWiFi(){
  Serial.print("Connecting to ");
  Serial.println(WIFI_SSID);
  WiFi.begin(WIFI_SSID,WIFI_PASSWORD);
  while(WiFi.status() != WL_CONNECTED){
    delay(500);
    Serial.print(".");
  }
  Serial.println();
  Serial.println("WiFi connected");
  Serial.print("IP Adderss: ");
  Serial.println(WiFi.localIP());
}

void callback(char * topic, byte * payload, unsigned int len){
  char LightStatus[100]={0x00};
  int Length=0;
  for(int i=0;Identifier[i]!='\0';i++)
  {
    Length=i+1;
  }
  for (int i = 0; i < len; i++){
    Serial.print((char)payload[i]);
    if((char)payload[i]==Identifier[0]){
      for(int j = 0; j < Length; j++){
        if((char)payload[ i + j ] != Identifier[ j]){
          break;
        }
        if( j == Length - 1 && (char)payload[ i + Length]=='"' && (char)payload[ i + Length + 1]==':' && (char)payload[ i + Length + 2 ] =='"'){
          for(int k = 3; (char)payload[i+Length+k]!='"'; k++){
            LightStatus[k-3]=(char)payload[i+Length+k];
          }
        }
      }
    }
  }
  Serial.println(" ");
  //Serial.println(LightStatus);
  display.fillScreen(GxEPD_WHITE);
  display.setCursor(0,17);
  display.println(LightStatus);
  display.update();
}

void ConnectAliyun(){
  while(!client.connected()){
    Serial.print("Attempting MQTT connection...");
    /*根据自动计算的用户名和密码连接到Alinyun的设备，不需要更改*/
    if(client.connect(myAliyun.client_id,myAliyun.username,myAliyun.password)){
      Serial.println("connected");
      client.subscribe(subTopic);
    }else{
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}
void setup(){
  Serial.begin(115200);
  pinMode(BEDROOD_LIGHT,OUTPUT);
  
  /*连接WIFI*/
  connectWiFi();
  
  /*初始化Alinyun的配置，可自动计算用户名和密码*/
  myAliyun.init(ALIYUN_SERVER,ProductKey,ClientId,DeviceName,DeviceSecret);
  
  client.setServer(myAliyun.mqtt_server,PORT);
  
  /*设置回调函数，当收到订阅信息时会执行回调函数*/
  client.setCallback(callback);
  
  /*连接到Aliyun*/
  ConnectAliyun();

    SPI.begin(SPI_CLK, SPI_MISO, SPI_MOSI, ELINK_SS);
    display.init(); // enable diagnostic output on Serial

    display.setRotation(1);
    display.fillScreen(GxEPD_WHITE);
    display.setTextColor(GxEPD_BLACK);
    display.setFont(&FreeMonoBold12pt7b);
    display.setCursor(0, 0);

    sdSPI.begin(SDCARD_CLK, SDCARD_MISO, SDCARD_MOSI, SDCARD_SS);

    if (!SD.begin(SDCARD_SS, sdSPI)) {
        sdOK = false;
    } else {
        sdOK = true;
    }

    display.update();
  
}

void loop(){
  if(!client.connected()){
    ConnectAliyun();
  }
  client.loop();
}
